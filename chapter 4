4.1 背景图像基础
  最简单的走起：
    body {
    background-imge: url(/img/pattern.gif);
    }
  可以选择垂直平铺，水平平铺，和根本不平铺。
  渐变的实现是创建一个很高很窄的渐变图像，然后将这个图像应用于页面的主体并让它水平平铺，（这个时候要多思考这些巧妙地运用！因为我们早就
  知道如何布置背景，要多思考！）
    body {
    backgroud-imge: url(/img/gradient.gif);
    background-repeat: repeat-x;
    background-color: #ccc; /*因为内容超过图像高度，渐变色会突然消失，所以很尴尬，就要给它补上一个整体的背景色咯*/
    }
  平铺一些页面上的时候（图像可能纯表现性的），可能希望将图像从其余内容中分离出来。实现的方法是在html中为这个图像创建一个“钩子”例如：
    #branding {
      width: 700px;
      height: 200px;
      background-image: url(/img/branding/.gif);
      background-repeat: no-repeat;
      }
    假设要在站点每个标题上添加一个项目符合如下：
      h1 {
        padding-left: 30px;
        background-image: url(/img/bullet.gif);
        background-repeat: no-repeat;
        background-position: left center;
        }
      简写的版本 ：
      h1 {
        background: #ccc url(/img/bullet.gif) no-repeat left center;
        }
        
  4.2 圆角框
    4.2.1 固定宽度的圆角框
      只需要两个图像一个用于框的顶部，一个用于底部。
        框的标记如下：
          <div class="box">
            <h2>Headline</h2>
              <p>Content</p>
          </div>
      样式如下：
      .box {
        width: 418px;
        background: #effce7 url(/img/bottom.gif) no-repeat left bottom;
        padding-bottom: 1px;
      }
      
      .box h2 {
        background: url(/img/top.gif) no-repeat left top;
        margin-top: 0;
        padding: 20px 20px 0 20px; /*不希望内容碰到框的边界所以添加内边距 */
        }
      
      .box p {
        padding: 0 20px;
        }
      如果希望变得更生动些那么可以给总体背景也配上合适的图片：
        .box {
          width: 424px;
          background: rul(/img/tile2.gif) repeat-y;
          }
        
        .box h2 {
          background: url(/img/top2.gif) no-repeat left top;
          padding-top: 20px;
          }
        
        .box .last {
          background: url(/img/bottom2.gif) no-reapeat left bottom;
          padding-bottom: 20px;
          }
        
        .box h2, .box p{
          padding-left:20px;
          padding-right: 20px;
          }
          
        <div class="box">
          <h2>Headline</h2>
            <p class="last">Content</p>
        </div>
        
        下面介绍灵活的圆角框： 运用到的技术是滑动门技术（sliding doors technique）
        h2 {
	        color: #94b767;
        }
        .box {
           width: 424px;
          background: url(img/tile2.gif) repeat-y;
          }

        .box h2 {
          background: url(img/top2.gif) no-repeat left top;
          padding-top: 20px;
        }

        .box .last {
          background: url(img/bottom2.gif) no-repeat left bottom;
          padding-bottom: 20px;
        }

        .box h2, .box p {
          padding-left: 20px;
          padding-right: 20px;
        }

        p {
          margin: 0; /* fixes bug in IE */
        }
        </head>

        <body>
          <h1>Fixed Rounded Corner Box Example</h1>

          <div class="box">
            <h2>Lorem Ipsum</h2>
              <p class="last">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin venenatis turpis ut quam. In dolor. Nam ultrices nisl sollicitudin sapien. Ut lacinia aliquet ante.<p>
          </div>
  4.2.2 山顶角 mountaintop corner
    这一概念的提出主要是为了满足创建不同颜色的圆角。创建曲线形的位图角蒙板盖住正在使用的背景颜色区。
    .box {
      width: 20em;
      backgrount: #effce7 url(/img/bottom-left.gif) no repeat left bottom;
      }
      
    .box-outer {
      background: url(/img/bottom-right.gif) no-repeat right bottom;
      padding-bottom: 5%;
      }
    
    .box-inner {
      background: url(/img/top-left.gif) no-repeat left top;
      }
     .box h2 {
     	background: url(img/top-right.gif) no-repeat right top;
     	padding-top: 5%;
     	}
      
      .box h2, .box p {
      	padding-left: 5%;
      	padding-right: 5%;
      	}
   1 多个背景图像免去了上面那些无语义的标记！通过CSS3可以实现！
      .box {
      	backgrount-image: url(/img/top-left.gif),
      			  url(/img/top-right.gif),
      			  url(/img/bottom-left.gif),
      			  url(/img/bottom-right.gif);
      	background-repeat: no-repeat,
      			   no-repeat,
      			   no-repeat,
      			   no-repeat;
      	backgrount-position: top left,
      		     	     top right,
      		     	     bottom left,
      		     	     bottom right;
  	}
  	
  	<div class="box">
  	    <h2>Headline</h2>
  	    	<p>Content</p>
  	</div>
  	
  2	在CSS3中可以添加border-radius来直接由浏览器生成圆角，不需要背景图片！
  	.box {
  	    border-radius: 1em;
  	    }
		为了适应不同的浏览器可以添加前缀来解决！
		.box {
		-moz-border-radius: 1em;
		-webkit-border-radius: 1em;
		border-radius: 1em;
		}
	
	3 border-image可以指定一个图像作为元素的边框，可以根据简单的百分比规则把图像划分为9个单独的部分，浏览器会自动使用
		恰当的部分作为边框的对应部分。这种技术成为nine-slice scaling！九分法缩放！
		
		

4.3 投影 shadow!
	简单的CSS投影原理是创建一个投影背景，把图像放在背景上并偏移和背景投影相等的像素！
	.img-wrapper {
		backgrount: url(/img/shadow.gif) no-repeat bottom right;
		clear: right;
		float: left;
		position: relative;
		}
	
	.img-wrapper img {
		background-color: #fff;
		border: 1px solid #a9a9a9;
		padding: 4px;
		display: block;
		margin: -5px 5px 5px -5px;
		postion: relative;
		}
		
4.3.2 来自Clagnut的投影方法
	他不使用负的外边距而是使用相对定位来偏移图像
		.img-wrapper {
		backgrount: url(/img/shadow.gif) no-repeat bottom right;
		float: left；
		line-height: 0;
		}
	
	.img-wrapper img {
		background-color: #fff;
		border: 1px solid #a9a9a9;
		padding: 4px;
		left: -5px;
		top: -5px;
		postion: relative;
		}
		
		CSS3中使用box-shadow让浏览器本身创建投影！！
		例如把投影偏移3像素，宽度设置为6像素，颜色为中等灰色！
			img {
				box-shadow: 3px 3px 6px #666;
				}
				
4.4 不透明度
	对于相互重叠的元素，可以用这一属性来显露下面的元素。
	1.CSS不透明度例如：
		.alert {
			background-color: #000;
			border-radius: 2em;
			opacity: 0.8;
			filter: alpha(opacity=80);/*proprietary IE code */
			}
	2. RGBa可以同时设置颜色和不透明的机制！a代表alpha透明度
		.alert {
			background-color: rgba(0,0,0,0.8); /*最后一个值是不透明度值，这里是80%也就是说20%的透明度 */
			border-radius: 2em;
			}
	3. PNG透明度
		PNG文件格式最大特点之一是它支持alpha透明度！
		在IE6中支持PNG透明度的方法是使用专有的AlphaImageLoader过滤器，为此需要在CSS添加以下代码：
		使用这行代码可能会导致CSS无效，所以最好放在IE6专用的样式表中！
		.img-wrapper div {
			filter: progid: DXImageTransform.Mircosoft.AlphaImageLoader(
			src='/img/shadow2.png', sizingMethod='corp');
			background:none;
			}
		当然也可以使用有条件注释：
		<!--[if ie 6]>
		<link rel="stylesheet" type="text/css" href="ie6.css"/>
		<![endif]-->
		
	4. CSS视差效果！
		要想实现这种效果，需要创建几个不同的背景图像。例如：
			body {
				background-image: url(/img/bg-rear.jpg);
				background-repeat: repeat-x;
				background-color: #d3ff99;
				background-position: 20% 0;
				}
			.midground {
				background-image: url(/img/bg-mid.png);
				background-repeat: repeat-x;
				background-color: transparent;
				backgrount-position: 40% 0;
				}
			
			.foreground {
				background-image: url(/img/bg-front.png);
				background-repeat: repeat-x;
				backgound-color: transparent;
				background-position: 150% 0;
				}
				
	4.5 图像的替换！
		
		

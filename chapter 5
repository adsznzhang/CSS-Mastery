5.1 简单的链接样式！
  链接伪类选择器：link 选择未被访问的，:visited你懂的！还有俩动态伪类选择器:hover和:active前者选择鼠标悬停出的元素，后者寻找被激活的！
  在定义悬停的时候最好添加:focus伪类，这样通过键盘移动到链接上时样式与悬停效果一样！things like this 
    a:hover, a:focus {color: red;}
    /* makes table rows yellow wehn hovered over */
    tr:hover {
      background: yellow;
      }
    input:focus {
      background yellow;
      }
  链接的下划线属性是text-decoration,a:link, a:visited {text-decoration: none;} 同时a:hover, a:focus, a:active {text-decoration: underline;}
  注意！！选择器的顺序非常重要！如果把上面俩颠倒位置那么悬停将不起作用了！因为层叠的原因，相同特殊性后定义的优先！
  
  5.2 make it more fun with underline....
    如果你不喜欢下划线！
      a:link, a:visited {
        text-decoration: none;
        font-weight: bold;
        }
      a:hover, a:focus, a:active {
        text-decoration: underline;
        font-weight: bodl;
        }
        
    5.2.2 奇特的链接下划线！
      使用图像创建链接下划线:
        a:link, a:visited {
          color: #666;
          text-decoration: none;
          background: url(/img/underline.gif) repeat-x left bottom
          }
  5.3 已访问链接的样式
    you can try the follwing css
       a:visited {
        padding-right: 20px;
        background: url(/img/check.gif) no-repeat right middle;
        }
  
  5.4 为链接目标设置样式
    除了链接到特定的文档之外，还可以使用包含片段标识符的链接链接到页面的特定部分，方法是在href的末尾加一个#字符，然后加上要链接元素的ID，例如！
      <a href="http://example.com/story.htm#comment3">
        A great comment by Simon
      </a>
      但是如果页面内容非常多，很难分清转到了哪个元素，所以CSS3中使用:target伪类为目标元素设置样式。例如：
        .comment: target {
          background-color: yellow;
          }
        还可以添加渐变动画！
          .comment:target {
            background-image: url(img/fade.gif);
            }
    
  5.5 突出显示不同类型的链接!
    区分链接是指向站点的另一个页面还是另一个站点！较笨的方法是在链接旁边加一个图标来区别例如：
      .external {
        background: url(/img/externalLink.gif) no-repeat right top;
        padding-right: 10px;
        }
    上面的方法不怎么灵巧，用属性选择器来解决这个问题比较好！例如：
      a[href^="http://www.yoursite.com"],
      a[href^="http://yoursited.com"] {
        background-image: none;
        padding-right: 0;
        }
    也可以对邮件链接进行突出显示：
      a[href^="mailto:"] {
        background: url(img/email.png) no-repeat right top;
        padding-right: 10px;
        }
    突然可下载的文档和提要！使用[att$=val]属性选择器。例如：
      a[href$=".pdf"] {
        background: url(img/pdfLink.gif) no-repeat right top;
        padding-right: 10px;
        }
      a[href$=".doc"] {
        background: url(img/wordLink.gif) no-repeat right top;
        padding-right: 10px;
        }
    许多人在网站上提供了RSS提要，也可以用CSS属性选择器区别：
      a[href$=".rss"], a[href$=".rdf"] {
        background: url(img/feedLink.gif) no-repeat right top;
        padding-right: 10px;
        }
        
  5.6 创建类似按钮的链接
    锚是行内元素，意味着只有在单击链接的内容时他们才激活！为了扩大可点击的区域，可把锚的display属性设置为block例如：
      a {
        display: block;
        width: 6.6em;
        line-height: 1.4;
        text-align: center;
        text-decoration: none;
        border: 1px solid #66a300;
        background-color: #8cca12;
        color: #fff;
        }
      注意到上面的CSS宽度是以em为单位，由于其性质，块级元素会扩展，填满可用的宽度。还有就是line-height来控制按钮的高度而不是height。如果设置height
      就必须用内边距将文本压低，模拟出垂直居中的效果。但是，文本在行框中总是垂直居中的，缺点是按钮的文本占据两行的话，按钮高度也就需要两行，此时
      就需要你自行调整按钮的文本了！
      
  5.6.1 简单的反转
    a:hover, a:focus {
      backgorund-color: #f7a300;
      border-color;
      }
  5.6.2 图像翻转
    a:link, a:visited {
      display: block;
      width: 203px;
      height:72px;
      text-indent: -1000em;
      background: url(/img/button.png) left top no-repeat;
      }
    
    a:hover, a:focus {
      background-image: url(/img/btton-over.png);
      }
      
    a:active {
      background-image: url(/img/button-active.png);
      }
    注意上面用了-1000em来隐藏了锚文本！ 也可以创建特大的按钮图像，或者结合使用背景颜色和图像创建流式的或者弹性按钮
    
    
5.6.3 Pixy 样式的翻转
  多图像的翻转由于要下载可能会产生延时，可以将鼠标悬停的图像作为背景应用于父元素，从而预先下载它们。另一个方法
  是不切换多个背景图像，而是使用一个图像并切换它的背景位置。使用此方法的好处是减少了服务器的请求数量，而且可以将所有按钮的状态放在一个地方。
  这个方法称为PIXY！
    a:link, a:visited {
      display: block;
      width: 203px;
      height: 72px;
      text-indent: -1000em;
      backgrount: url(/img/buttons.png) -203px 0 no-repeat;
      }
    
    a:hover, a:focus {
      background-position: right top;
      }
    a:active {
      background-position: left top;
      }
    
  即使是改变图像的对齐方式，windows上的IE还是会向服务器请求新的图像，会产生轻微的闪烁，解决的办法是将翻转状态应用于链接的父元素。例如
    p {
      background: url(/img/buttons.png) no-repeat right top;}
  
  5.6.4 CSS精灵！！
    多个服务器请求会对站点的性能产生显著的影响，所以Pixy方法把所有按钮状态包含在一个图像中，更进一步把所有图标甚至站点导航都包含在一个
    图像中，这样可以大量减少服务器的调用！这就是精灵的核心！
  
  5.6.5 用CSS3实现翻转！
    CSS3包含了text-shadow box-shadow和border-radius等属性，可以创建样式丰富的按钮，而不需要使用任何图像。例如下面的样式：
      a {
        display: block;
        width: 6.6em;
        height: 1.4em;
        line-height: 1.4;
        text-align: center;
        text-decoration: none;
        border: 1px solid #66a300;
        background-color:#8cca12;
        color: #fff;
        }
  接下来添加曲线边框和投影。
    a {
      display: block;
      width: 6.6em;
      height: 1.4em;
      line-height: 1.4;
      text-algin: center;
      text-decoration: none;
      border: 1px solid #66a300;
      -moz-border-radius: 6px;
      -webkit- border-radius: 6px;
      border-radius: 6px;
      background-color: #8cca12;
      color: #fff;
      text-shadow: 2px 2px 2px #66a300;
      -moz-box-shadow:  2px 2px 2px #ccc;
      -webkit-box-shadow: 2px 2px 2px #ccc;
      box-shadow: 2px 2px 2px #ccc;
      }
      
      为了实现渐变可以使用-webkit-gradient.他的参数包括（直线或放射状， 渐变的方向，初始颜色，结束颜色和中间的过渡点！）例如：
        a {
          background-img: -webkit-gradient(linear, left top ,left bottom, from(#abe142), to (#67a400))
          }
      还可以添加倒影！例如：
      a {
        -webkit-box-reflect: below 2px -webkit-gradient (linear, left top, left bottom, from(transparent), color-stop(0.52,transparent), to(white));
        }
  
  
  5.7 纯CSS工具提示！
    当鼠标悬停在具有title属性的元素上时一些浏览器弹出的黄色小文本框。使用CSS定位技术可以创建纯CSS工具提示！例如：
      <p>
        <a href="http:/www.andybudd.com/" class="tooltip">
      Andy Budd<span> (This website rocks) </span></a> is a web developer based in Brignton England.
      </p>
      在这个链接中，添加希望显示为链接文本的文本，然后添加包围在span中的工具提示文本！将工具提示包围在圆括号中，这样的话在样式关闭
      时这个句子仍然有意义的。首先将锚的position属性设置为relative。这样就可以相对父元素的位置对span内容进行绝对定位！！因为不希望工具提示一开始就显示，
      所以将它的display属性设置为none;
        a.tooltip {
          postion: relative;
          }
        a.tooltip span{
          display: none;
          }
        当鼠标悬停在这个锚上时，表示希望显示span的内容，方法是将span的display属性设置为block。但是只在鼠标悬停在这个链接上时才这样做。
        为了让span内容出现在锚的右下方，需要将span的position属性设置为absolute，并且将它定位到距离锚顶部1em,距离左边2em的地位！
        
        a.tooltip: hover span{
          display: block;
          position: absolute;
          top: 1em;
          left 2em;
          }
          记住！！！绝对定位元素的定位相对于最近的已定位祖先元素！！（如果没有则相对于根元素）！！！！！！！！！！！！！！
          
          
      
      

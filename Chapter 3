3.1 BOX MODEL
  内边距，外边距和边框的默认值都为零
  CSS中width和height指的是内容区域的宽度和高度。
  3.1.1 IE和BOX MODEL
    IE6和早期版本定义width属性不是内容宽度，而是内容，内边距和边框的总和。
    CSS3中box-sizing可以定义使用哪种盒模型，但是很少用到这一属性
    目前最好的解决方案是回避这个问题，不要给元素添加具有指定宽度的内边距
  
  3.1.2 margin的叠加
    当两个或更多个垂直外边距相遇时，他们将形成一个外边距。这个外边距的高度等于较大者
    只有普通文档流中块框的垂直外边距才会发生外边距叠加。行内框，浮动框或者绝对定位框之间的外边距不会叠加
    
  3.2 可视化格式模型和定位模型（非常重要）P55
  
    3.2.1 可视化格式模型
      可以使用display属性改变生成框的类型
      CSS中有三种基本的定位机制：普通流， 浮动，和绝对定位。默认都为普通流！
      修改行内框尺寸的唯一方法是修改行高或者水平边框，内边距或者外边距。
      #mybox {
        position: relative;
        left:20px;
        top:20px;
      }
    3.2.2  相对定位
      很好理解我就不总结了哈！
    3.2.3 绝对定位
      绝对定位的元素位置是相对于距离它最近的那个已定位的祖先元素确定的。如果元素没有已定位的祖先元素，那么它的位置是相对于初始包含块
      绝对定位的框与文档流无关，可以覆盖在页面上的其他元素上，可以通过设置z-index来控制顺序，z-index越高，在栈中的位置越高。
      
      固定定位是绝对定位的一种！差异在于固定元素的包含块是视口(viewpoint)
      也就是说窗口钉在那里不动了。。。
      
    3.2.4 浮动
      想要阻止行框围绕在浮动框的外边，需要对包含这些行框的元素应用clear属性。它的值可以是left,right,both or none.
      浮动元素脱离了文档流，不影响周围的元素。但是，对元素进行清理实际上为前面的浮动元素留出了垂直空间。
      因为浮动元素不占据空间，所以容器元素不包围他们。添加一个进行清理的空元素可以迫使容器元素包围浮动元素。例如：
        .news{
          backgroud-color: gray;
          border: solid 1px black;
        }
        
        .news img{
          float: left;
        }
        
        .news p{
          float: right;
        }
        
        .clear {
          clear: both;
        }
        
        <div class="news">
          <img src="/img/news-pic.jpg" alt="my pic"/>
          <p>Some text</p>
          <br class="clear" />
        </div>
        大部分会有现成的元素应用clear 属性，但是有时候不得不添加无意义的标记。。。
        当然也可以选择对容器进行浮动，但是就要考虑它周围的元素了。
        
        overflow 属性定义在包含的内容对于指定的尺寸太大的情况下元素怎么样。
        P65当中的一些内容不理解需要搜索其他知识（come back later 啦）
        可以使用CSS生成的内容或JS对浮动元素进行清理！这两种方法的基本概念是相同的，并不直接向标记中添加进行清理的元素，而是将它
        动态的添加到页面中。
        
        
        
      
        
